//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DDona.WCFTest.App.Venda {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendaDTO", Namespace="http://schemas.datacontract.org/2004/07/DDona.WCFTest.DTO.Venda")]
    [System.SerializableAttribute()]
    public partial class VendaDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DescontoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValorTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data {
            get {
                return this.DataField;
            }
            set {
                if ((this.DataField.Equals(value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Desconto {
            get {
                return this.DescontoField;
            }
            set {
                if ((this.DescontoField.Equals(value) != true)) {
                    this.DescontoField = value;
                    this.RaisePropertyChanged("Desconto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValorTotal {
            get {
                return this.ValorTotalField;
            }
            set {
                if ((this.ValorTotalField.Equals(value) != true)) {
                    this.ValorTotalField = value;
                    this.RaisePropertyChanged("ValorTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Venda.IVenda")]
    public interface IVenda {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenda/Get", ReplyAction="http://tempuri.org/IVenda/GetResponse")]
        DDona.WCFTest.App.Venda.VendaDTO[] Get();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenda/Get", ReplyAction="http://tempuri.org/IVenda/GetResponse")]
        System.Threading.Tasks.Task<DDona.WCFTest.App.Venda.VendaDTO[]> GetAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVendaChannel : DDona.WCFTest.App.Venda.IVenda, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VendaClient : System.ServiceModel.ClientBase<DDona.WCFTest.App.Venda.IVenda>, DDona.WCFTest.App.Venda.IVenda {
        
        public VendaClient() {
        }
        
        public VendaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VendaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VendaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VendaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DDona.WCFTest.App.Venda.VendaDTO[] Get() {
            return base.Channel.Get();
        }
        
        public System.Threading.Tasks.Task<DDona.WCFTest.App.Venda.VendaDTO[]> GetAsync() {
            return base.Channel.GetAsync();
        }
    }
}
